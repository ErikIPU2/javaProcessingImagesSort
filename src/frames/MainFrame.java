/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import processing.core.PApplet;
import processingPrograms.BubbleSortImage;
import processingPrograms.InsertionSortImage;
import processingPrograms.SelectionSortImage;
import processingPrograms.CombSortImage;

/**
 *
 * @author erik
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LayoutPanel = new javax.swing.JPanel();
        ImageSelectPanel = new javax.swing.JPanel();
        ImagePathInput = new javax.swing.JTextField();
        SelecImageBtn = new javax.swing.JButton();
        MethodSelectPanel = new javax.swing.JPanel();
        MethodSelectComboBox = new javax.swing.JComboBox<>();
        ButtonPanel = new javax.swing.JPanel();
        StartBtn = new javax.swing.JButton();
        ExitBtn = new javax.swing.JButton();
        FPSPanel = new javax.swing.JPanel();
        FPSSlider = new javax.swing.JSlider();
        FPSShowLabel = new javax.swing.JLabel();
        MenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        ImageSelectPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione a imagem"));

        ImagePathInput.setToolTipText("Endereço da Imagem");

        SelecImageBtn.setText("Selecionar");
        SelecImageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelecImageBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ImageSelectPanelLayout = new javax.swing.GroupLayout(ImageSelectPanel);
        ImageSelectPanel.setLayout(ImageSelectPanelLayout);
        ImageSelectPanelLayout.setHorizontalGroup(
            ImageSelectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImageSelectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ImagePathInput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SelecImageBtn)
                .addContainerGap())
        );
        ImageSelectPanelLayout.setVerticalGroup(
            ImageSelectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ImageSelectPanelLayout.createSequentialGroup()
                .addGroup(ImageSelectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SelecImageBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ImagePathInput))
                .addContainerGap())
        );

        MethodSelectPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Método de ordenação"));

        MethodSelectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bubble Sort", "Selection Sort", "Insertion Sort" }));

        javax.swing.GroupLayout MethodSelectPanelLayout = new javax.swing.GroupLayout(MethodSelectPanel);
        MethodSelectPanel.setLayout(MethodSelectPanelLayout);
        MethodSelectPanelLayout.setHorizontalGroup(
            MethodSelectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MethodSelectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MethodSelectComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        MethodSelectPanelLayout.setVerticalGroup(
            MethodSelectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MethodSelectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MethodSelectComboBox)
                .addContainerGap())
        );

        StartBtn.setText("Começar");
        StartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartBtnActionPerformed(evt);
            }
        });

        ExitBtn.setText("Sair");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ButtonPanelLayout = new javax.swing.GroupLayout(ButtonPanel);
        ButtonPanel.setLayout(ButtonPanelLayout);
        ButtonPanelLayout.setHorizontalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StartBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(ExitBtn)
                .addContainerGap())
        );
        ButtonPanelLayout.setVerticalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartBtn)
                    .addComponent(ExitBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        FPSPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Velocidade(FPS)"));

        FPSSlider.setMaximum(10000);
        FPSSlider.setMinimum(1);
        FPSSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                FPSSliderStateChanged(evt);
            }
        });

        FPSShowLabel.setText("60 FPS");

        javax.swing.GroupLayout FPSPanelLayout = new javax.swing.GroupLayout(FPSPanel);
        FPSPanel.setLayout(FPSPanelLayout);
        FPSPanelLayout.setHorizontalGroup(
            FPSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FPSPanelLayout.createSequentialGroup()
                .addGroup(FPSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FPSPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(FPSSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(FPSPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(FPSShowLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        FPSPanelLayout.setVerticalGroup(
            FPSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FPSPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FPSSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FPSShowLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout LayoutPanelLayout = new javax.swing.GroupLayout(LayoutPanel);
        LayoutPanel.setLayout(LayoutPanelLayout);
        LayoutPanelLayout.setHorizontalGroup(
            LayoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LayoutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LayoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ImageSelectPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MethodSelectPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FPSPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        LayoutPanelLayout.setVerticalGroup(
            LayoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LayoutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ImageSelectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FPSPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MethodSelectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");
        MenuBar.add(jMenu1);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LayoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LayoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartBtnActionPerformed
        if (!verifyInputPath()) {
            JOptionPane.showMessageDialog(this, "Arquivo invalido", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        else {
            String sortOption = (String) MethodSelectComboBox.getSelectedItem();
            String path = ImagePathInput.getText();
            switch (sortOption) {
                case "Bubble Sort":
                    BubbleSortImage bubbleSortImage = new BubbleSortImage();
                    bubbleSortImage.setImagePath(path);
                    bubbleSortImage.setFrameRate(FPSSlider.getValue());
                    bubbleSortImage.startSort();
                    break;
                case "Selection Sort":
                    SelectionSortImage selectionSortImage = new SelectionSortImage();
                    selectionSortImage.setImagePath(path);
                    selectionSortImage.setFrameRate(FPSSlider.getValue());
                    selectionSortImage.startSort();
                    break;
                case "Insertion Sort":
                    InsertionSortImage insertionSortImage = new InsertionSortImage();
                    insertionSortImage.setImagePath(path);
                    insertionSortImage.setFrameRate(FPSSlider.getValue());
                    insertionSortImage.startSort();
                    break;
                case "Comb Sort":
                    CombSortImage combSortImage = new CombSortImage();
                    combSortImage.setImagePath(path);
                    combSortImage.setFrameRate(FPSSlider.getValue());
                    combSortImage.startSort();
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "Metodo indisponivel nessa versão", "Erro", JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }
    }//GEN-LAST:event_StartBtnActionPerformed

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_ExitBtnActionPerformed

    private void SelecImageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelecImageBtnActionPerformed
        JFileChooser imageSelector = new JFileChooser();
        FileNameExtensionFilter imageFilters = new FileNameExtensionFilter("Imagens JPG", "jpg");
        imageSelector.setFileFilter(imageFilters);
        int fcCode = imageSelector.showOpenDialog(this);
        
        if (fcCode == JFileChooser.APPROVE_OPTION) {
            File image = imageSelector.getSelectedFile();
            
            if (!image.exists()) {
                JOptionPane.showMessageDialog(this, "Arquivo inexistente", "Erro", JOptionPane.ERROR_MESSAGE);
            } else if (!verifyExtension(image.toString(), "jpg")) {
                JOptionPane.showMessageDialog(this, "Formato Invalido", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                this.ImagePathInput.setText(image.toString());
            }
            
            
        }
    }//GEN-LAST:event_SelecImageBtnActionPerformed

    private void FPSSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_FPSSliderStateChanged
        int fps = FPSSlider.getValue();
        FPSShowLabel.setText(fps + " FPS");
    }//GEN-LAST:event_FPSSliderStateChanged
    
    private boolean verifyExtension(String path, String extension) {
        int lastDotIndex = path.lastIndexOf('.');
        //add 1 to ignore the '.'
        return extension.equals(path.substring(lastDotIndex + 1));
    }
    
    private boolean verifyInputPath() {
        String input = ImagePathInput.getText();
        
        if (input.equals("")) {
            return false;
        } else if (!verifyExtension(input, "jpg")) {
            return false;
        }
        
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JPanel FPSPanel;
    private javax.swing.JLabel FPSShowLabel;
    private javax.swing.JSlider FPSSlider;
    private javax.swing.JTextField ImagePathInput;
    private javax.swing.JPanel ImageSelectPanel;
    private javax.swing.JPanel LayoutPanel;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JComboBox<String> MethodSelectComboBox;
    private javax.swing.JPanel MethodSelectPanel;
    private javax.swing.JButton SelecImageBtn;
    private javax.swing.JButton StartBtn;
    private javax.swing.JMenu jMenu1;
    // End of variables declaration//GEN-END:variables
}
